(define *pipe* (open-output-file (car (command-line))))
(define *stdio* console-i/o-port)
(define *delimiter* #\newline)
(define *the-environment* (the-environment))
(define *scmutils* (environment-bound? *the-environment* 'D))
(define *silence* '*silence*)

(define (*send* . args)
  (write-char #\[ *pipe*)
  (if (pair? args)
    (let ((type (car args)) (data (cdr args)))
      (write type *pipe*)
      (let iter ((data data))
        (write-char #\, *pipe*)
        (write-string (car data) *pipe*)
        (if (pair? (cdr data))
            (iter (cdr data))))))
  (write-char #\] *pipe*)
  (write-char *delimiter* *pipe*)
  (flush-output *pipe*))
